f1(w) = w.rev(w)
if w end in b then f2(w) = b^k where k is the number of b's in w, else f2(w) = w
f3 replaces each symbol b by as many b's as there are a's between this occurrence of b and the previous occurrence of b
f4 outputs the last input symbol, n-1 b's and w itself
f5 outputs double number of a's before b
f6 contains a loop when start with an a before the first b

2DFT:
({q0,q1},{a,b},{b},{(q0,a,b,q0,1),(q0,b,b,q0,1),(q0,$,,q1,0)},{q0},{q1})
f1:({q0,q1,q2},{a,b},{a,b},{(q0,a,a,q0,1),(q0,b,b,q0,1),(q0,$,,q1,-1),(q1,a,a,q1,-1),(q1,b,b,q1,-1),(q1,^,,q2,0)},{q0},{q2})
modified for translation:({q0,q1,q2,q3},{a,b},{a,b},{(q0,a,a,q0,1),(q0,b,b,q0,1),(q0,^,,q0,1),(q0,$,,q1,-1),(q1,a,a,q1,-1),(q1,b,b,q1,-1),(q1,^,,q2,1),(q2,$,,q3,1),(q2,a,,q2,1),(q2,b,,q2,1)},{q0},{q3})
f2:({q0,q1,q2,q3,q4,q5,q6,q7},{a,b},{a,b},{(q0,b,,q2,1),(q1,a,,q1,1),(q1,b,,q2,1),(q1,$,,q3,-1),(q2,a,,q1,1),(q2,b,,q2,1),(q2,$,,q4,-1),(q3,a,,q3,-1),(q3,b,,q3,-1),(q3,^,,q5,1),(q4,a,,q4,-1),(q4,b,,q4,-1),(q4,^,,q6,1),(q5,a,a,q5,1),(q5,b,b,q5,1),(q5,$,,q7,0),(q6,a,,q6,1),(q6,b,b,q6,1),(q6,$,,q7,0)},{q0},{q7})
modified for translation:({q0,q1,q2,q3,q4,q5,q6,q7},{a,b},{a,b},{(q0,^,,q0,1),(q0,a,,q1,1),(q0,a,,q1,1),(q0,b,,q2,1),(q1,a,,q1,1),(q1,b,,q2,1),(q1,$,,q3,-1),(q2,a,,q1,1),(q2,b,,q2,1),(q2,$,,q4,-1),(q3,a,,q3,-1),(q3,b,,q3,-1),(q3,^,,q5,1),(q4,a,,q4,-1),(q4,b,,q4,-1),(q4,^,,q6,1),(q5,a,a,q5,1),(q5,b,b,q5,1),(q5,$,,q7,1),(q6,a,,q6,1),(q6,b,b,q6,1),(q6,$,,q7,1)},{q0},{q7})
f3:({q0,q1,q2,q3},{a,b},{a,b},{(q0,a,a,q0,1),(q0,b,,q1,-1),(q0,$,,q3,1),(q1,a,b,q1,-1),(q1,b,,q2,1),(q1,^,,q2,1),(q2,a,,q2,1),(q2,b,,q0,1)},{q0},{q3})
f4:({q0,q1,q2,q3,q4,q5,q6,q7,q8},{a,b,c},{a,b,c},{(q0,a,,q1,1),(q0,b,,q2,1),(q0,c,,q3,1),(q1,a,,q1,1),(q1,b,,q2,1),(q1,c,,q3,1),(q1,$,,q4,-1),(q2,a,,q1,1),(q2,b,,q2,1),(q2,c,,q3,1),(q2,$,,q5,-1),(q3,a,,q1,1),(q3,b,,q2,1),(q3,c,,q3,1),(q3,$,,q6,-1),(q4,a,a,q5,-1),(q4,b,a,q5,-1),(q4,c,a,q5,-1),(q5,a,b,q5,-1),(q5,b,b,q5,-1),(q5,c,b,q5,-1),(q5,^,,q7,1),(q6,a,c,q5,-1),(q6,b,c,q5,-1),(q6,c,c,q5,-1),(q7,a,a,q7,1),(q7,b,b,q7,1),(q7,c,c,q7,1),(q7,$,,q8,1)},{q0},{q8})
f5:({q0,q1,q2,q3,q4,q5,q6},{a,b},{a,b},{(q0,a,,q1,1),(q0,b,,q1,1),(q0,$,,q6,1),(q1,a,,q1,1),(q1,b,,q2,-1),(q1,$,,q6,1),(q2,a,,q2,-1),(q2,b,,q3,1),(q2,^,,q3,1),(q3,a,a,q3,1),(q3,b,,q4,-1),(q4,a,,q4,-1),(q4,b,,q5,1),(q4,^,,q5,1),(q5,a,a,q5,1),(q5,b,,q0,1)},{q0},{q6})
f6:({q0,q1,q2,q3},{a,b},{a,b},{(q0,a,a,q0,1),(q0,b,b,q1,-1),(q1,a,a,q0,1),(q1,b,b,q2,1),(q1,^,,q2,1),(q2,a,,q2,1),(q2,b,,q2,1),(q2,$,,q3,1)},{q0},{q3})

SST:
f1:({q0},{a,b},{a,b},{x,y},{q0},{(q0,xy)},{(q0,a,q0),(q0,b,q0)},{(q0,a,x,xa),(q0,a,y,ay),(q0,b,x,xb),(q0,b,y,by)})
f2:({q0,q1},{a,b},{a,b},{x,y},{q0},{(q0,x),(q1,y)},{(q0,a,q0),(q0,b,q1),(q1,a,q0),(q1,b,q1)},{(q0,a,x,xa),(q0,b,x,xb),(q0,a,y,y),(q0,b,y,yb),(q1,a,x,xa),(q1,b,x,xb),(q1,a,y,y),(q1,b,y,yb)})
f3:({q0},{a,b},{a,b},{x,y},{q0},{(q0,x)},{(q0,a,q0),(q0,b,q0)},{(q0,a,x,xa),(q0,a,y,yb),(q0,b,x,xy),(q0,b,y,)})
f4:({q0,q1,q2,q3},{a,b,c},{a,b,c},{x,y,z},{q0},{(q1,xyz),(q2,xyz),(q3,xyz)},{(q0,a,q1),(q0,b,q2),(q0,c,q3),(q1,a,q1),(q1,b,q2),(q1,c,q3),(q2,a,q1),(q2,b,q2),(q2,c,q3),(q3,a,q1),(q3,b,q2),(q3,c,q3)},{(q0,a,x,a),(q0,a,y,),(q0,a,z,a),(q0,b,x,b),(q0,b,y,),(q0,b,z,b),(q0,c,x,c),(q0,c,y,),(q0,c,z,c),(q1,a,x,a),(q1,a,y,yb),(q1,a,z,za),(q1,b,x,b),(q1,b,y,yb),(q1,b,z,zb),(q1,c,x,c),(q1,c,y,yb),(q1,c,z,zc),(q2,a,x,a),(q2,a,y,yb),(q2,a,z,za),(q2,b,x,b),(q2,b,y,yb),(q2,b,z,zb),(q2,c,x,c),(q2,c,y,yb),(q2,c,z,zc),(q3,a,x,a),(q3,a,y,yb),(q3,a,z,za),(q3,b,x,b),(q3,b,y,yb),(q3,b,z,zb),(q3,c,x,c),(q3,c,y,yb),(q3,c,z,zc)})
f5:({q0,q1,q2},{a,b},{a,b},{x,y},{q0},{(q1,y),(q2,y)},{(q0,a,q1),(q0,b,q1),(q1,a,q1),(q1,b,q2),(q2,a,q1),(q2,b,q2)},{(q0,a,x,aa),(q0,a,y,),(q0,b,x,),(q0,b,y,),(q1,a,x,xaa),(q1,a,y,y),(q1,b,x,),(q1,b,y,yx),(q2,a,x,aa),(q2,a,y,y),(q2,b,x,),(q2,b,y,y)})

MSOT:
f1:({a,b},{a,b},{1,2},{F{1}=(out{a}(x))+(out{b}(x));F{2}=true;},{F{1,1}{a}=edge{a}(x,y);F{1,1}{b}=edge{b}(x,y);F{1,2}{a}=(out{a}(x))*((!out{a}(y))*(!out{b}(y)));F{1,2}{b}=(out{b}(x))*((!out{a}(y))*(!out{b}(y)));F{2,2}{a}=edge{a}(y,x);F{2,2}{b}=edge{b}(y,x);})
f3:({a,b},{a,b},{1,2,3},{F{1}=out{a}(x);F{2}=(out{a}(x))*(#y((x<y)*(out{b}(y))));F{3}=(!out{a}(x))*(!out{b}(x))},{F{1,1}{a}=edge{a}(x,y);F{1,2}{a}=(#z((edge{a}(x,z))*(!out{a}(z))))*(fps{a}(x,y));F{1,3}{a}=!#z((F{1,1}{a}(x,z))+(F{1,2}{a}(x,z)));F{2,2}{b}=edge{a}(x,y);F{2,1}{b}=(#z((edge{a}(x,z))*(!out{a}(z))))*(next{a}(x,y));F{2,3}{b}=!#z((F{2,1}{b}(x,z))+(F{2,2}{b}(x,z)))})

MSOT encoding rules:
or: ()+()
and: ()*()
exist: #?()
forall: $?()
not: !
atomic formula: ???{}*()
node formula: F{}=...
edge formula: F{}{}=...

exist a path:<

compile instructions:
for windows:
javac -d bin .\src\simulator\transducer\*.java .\src\simulator\util\*.java .\src\simulator\*.java
java -cp bin simulator.Simulator
for linux:
javac -d bin ./src/simulator/transducer/*.java ./src/simulator/util/*.java ./src/simulator/*.java
java -cp bin simulator.Simulator